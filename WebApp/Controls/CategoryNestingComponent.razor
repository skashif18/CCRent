@using Syncfusion.Blazor.DropDowns
@using System.Collections.Specialized
@using System.Collections
@using System.Reflection
@inject IToastService toastService
@inject NavigationManager NavigationManager
@inject ICategoryRepository repository
 

 
<div class="col-md-6 mt-4">
    <label>@this.p_id1</label>
    <select class="form-control" @onchange="@((e) => this.getList(e,j))">
        <option value="index_@j">Select</option>
        <option value="index_@p_id1">Selectgg</option>

        @foreach (DictionaryEntry i in this.val)
        {
            string s = @i.Key + "_" + @j;
            <option value="@i.Key">@i.Value</option>

        }
    </select>
</div>
    

@code {
    [Parameter]
    public ListDictionary val { get; set; }

    [Parameter]
    public int j {get;set;}

    public string p_id1;




    MemberInfo[] memberInfo;

    CategoryListComponent child;

    private SrvCategory ModelSave;

    string IncludedColumn;

    int r;

    List<SrvCategory> Parentlist = new List<SrvCategory>();

    List<SrvCategory> NumOfCategory = new List<SrvCategory>();

    List<ListDictionary> listOfVal = new List<ListDictionary>();

    List<SrvCategory> Test = new List<SrvCategory>();

    List<int> TrackParentId = new List<int>();

    List<int> ListOfId = new List<int>();

    public string LabelName { get; set; }

    ListDictionary myDict = new ListDictionary();

    public int ParentId { get; set; } = 0;

    categoryInfo catInfo = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();


        p_id1 = "0";
    }

    [Parameter]
    public EventCallback <int> Indexn { get; set; }
    [Parameter]
    public EventCallback <string>str { get; set; }

    [Parameter]
   public EventCallback<categoryInfo> CategoryInfo { get; set; }

    private void getList(ChangeEventArgs e, int nIndex)
    {
        Indexn.InvokeAsync(nIndex);
        p_id1 = Convert.ToString(e.Value);
        str.InvokeAsync(Convert.ToString(e.Value));
        catInfo.value = Convert.ToInt32(e.Value);
        catInfo.index = Convert.ToInt32(nIndex);
        CategoryInfo.InvokeAsync(catInfo);

        toastService.ShowSuccess(""+nIndex);

    }

    public   class categoryInfo
    {
        public  int value;
        public  int index;
    }
}
