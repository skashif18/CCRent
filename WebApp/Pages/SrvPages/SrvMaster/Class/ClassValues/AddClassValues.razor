@page "/AddClassValues/{classId:int}/{ClassName}"

@inject NavigationManager NavigationManager
@inject IClassValueRepository repository
@inject IToastService toastService


<h3>Add Class Values For {@ClassName}</h3>


@if (model != null)
{
    <EditForm Model="model" OnValidSubmit="OnValidSumit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="nameen" @bind-Value="model.NameEn" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="description">Name Ar</label>
            <InputText id="namear" @bind-Value="model.NameAr" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="description">Note</label>
            <InputText id="namear" @bind-Value="model.Note" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="description">User Defiend One</label>
            <InputText id="namear" @bind-Value="model.UserDefined1" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="description">User Defiend 2</label>
            <InputText id="namear" @bind-Value="model.UserDefined2" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="description">User Defiend 3</label>
            <InputText id="namear" @bind-Value="model.UserDefined3" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="description">User Defiend 4</label>
            <InputText id="namear" @bind-Value="model.UserDefined4" class="form-control"></InputText>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
    </EditForm>

}


@code {


    [Parameter]
    public int classId { get; set; }

    [Parameter]
    public string ClassName { get; set; }

    private SrvClassValue model;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        model = new();
    }

    private void OnValidSumit()
    {
        model.ClassId = classId;
        var v = repository.Create(model);

        if (v.IsSuccess)
        {
            toastService.ShowSuccess(v.Message);
        }
        else
        {
            toastService.ShowError(v.Message);
        }

        NavigationManager.NavigateTo($"/ClassValue/{classId}/{ClassName}");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo($"/ClassValue/{classId}/{ClassName}");
    }

}
