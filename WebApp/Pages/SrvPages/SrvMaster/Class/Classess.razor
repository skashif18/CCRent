@page "/class"
@attribute [Authorize(Policy = "AdminOnly")]
@inject NavigationManager NavigationManager
@inject IToastService toastService

@inject IClassRepository repository

<h3>Manage Classes</h3>

@if (classes != null)
{

    <table class="table">
        <thead>
            <tr>
                <th>Name En</th>
                <th>Name Ar</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in classes)
            {
                <tr>
                    <td>@item.NameEn</td>
                    <td>@item.NameAr</td>
                    <td>
                        <button type="button" @onclick="@(() => Edit(item))" class="btn btn-sm">Edit</button>
                        <button type="button" @onclick="@(() => Delete(item.Id))" class="btn btn-sm">Delete</button>
                        <button type="button" @onclick="@(() => ClassValues(item.Id,item.NameEn))" class="btn btn-sm"> Class Values</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<br />
<button type="button" @onclick="OnClickAddClass" class="btn btn-primary">Add New</button>

@code {
    private IEnumerable<SrvClass> classes;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadList();
    }

    private void OnClickAddClass()
    {
        NavigationManager.NavigateTo("/AddClass");
    }

    private void Edit(SrvClass model)
    {
        NavigationManager.NavigateTo($"/editClass/{model.Id}");
    }
    private void ClassValues(int Id,string ClassName)
    {
        NavigationManager.NavigateTo($"/ClassValue/{Id}/{ClassName}");
    }

    private void Delete(int Id)
    {
        var v = repository.Delete(Id);
        if (v.IsSuccess)
        {
            toastService.ShowSuccess(v.Message);
        }
        else
        {
            toastService.ShowError(v.Message);

        }

        LoadList();
    }

    private void LoadList()
    {
        classes = repository.GetAll()?.ToList();
    }
}

