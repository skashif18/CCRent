// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Plugins.DataStore.SQL;

#nullable disable

namespace Plugins.DataStore.SQL.Migrations
{
    [DbContext(typeof(CarRentContext))]
    partial class CarRentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoreBusiness.Master.SrvAddOn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("IconId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IconId");

                    b.ToTable("SrvAddOn", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("SrvCategory", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SrvClass", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvClassValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("SrvClassValue", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mobileno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phoneno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReligionId")
                        .HasColumnType("int");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("GenderId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("ReligionId");

                    b.ToTable("SrvCustomer", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.Property<string>("FileUrlpath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FileURLPath");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServerLocalPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TableValueId")
                        .HasColumnType("int");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FileType");

                    b.ToTable("SrvDocument", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvFileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SrvFileType", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.Property<string>("FileUrlpath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FileURLPath");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServerLocalPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FileType");

                    b.ToTable("SrvImage", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("SrvService", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvServiceAddOn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AddOnId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddOnId");

                    b.HasIndex("ImageId");

                    b.HasIndex("ServiceId");

                    b.ToTable("SrvServiceAddOn", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvServiceClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("ServiceId");

                    b.ToTable("SrvServiceClass", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvServiceClassValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("ClassValueId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("ClassValueId");

                    b.HasIndex("ServiceId");

                    b.ToTable("SrvServiceClassValue", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("SrvServiceType", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mobileno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phoneno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReligionId")
                        .HasColumnType("int");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("GenderId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("ReligionId");

                    b.ToTable("SrvSupplier", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SysCity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("SysCity", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SysCountry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SysCountry", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SysGender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SysGender", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SysLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SysLanguage", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SysNationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SysNationality", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SysReligion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SysReligion", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvAddOn", b =>
                {
                    b.HasOne("CoreBusiness.Master.SrvImage", "Icon")
                        .WithMany("SrvAddOns")
                        .HasForeignKey("IconId")
                        .HasConstraintName("FK_SrvAddOn_SrvImage");

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvCategory", b =>
                {
                    b.HasOne("CoreBusiness.Master.SrvCategory", "ParentCategory")
                        .WithMany("InverseParentCategory")
                        .HasForeignKey("ParentCategoryId")
                        .HasConstraintName("FK_SrvCategory_SrvCategory");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvClassValue", b =>
                {
                    b.HasOne("CoreBusiness.Master.SrvClass", "Class")
                        .WithMany("SrvClassValues")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK_SrvClassValue_SrvClass");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvCustomer", b =>
                {
                    b.HasOne("CoreBusiness.Master.SysCity", "City")
                        .WithMany("SrvCustomers")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_SrvCustomer_SysCity");

                    b.HasOne("CoreBusiness.Master.SysGender", "Gender")
                        .WithMany("SrvCustomers")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_SrvCustomer_SysGender");

                    b.HasOne("CoreBusiness.Master.SysLanguage", "Language")
                        .WithMany("SrvCustomers")
                        .HasForeignKey("LanguageId")
                        .HasConstraintName("FK_SrvCustomer_SysLanguage");

                    b.HasOne("CoreBusiness.Master.SysNationality", "Nationality")
                        .WithMany("SrvCustomers")
                        .HasForeignKey("NationalityId")
                        .HasConstraintName("FK_SrvCustomer_SysNationality");

                    b.HasOne("CoreBusiness.Master.SysReligion", "Religion")
                        .WithMany("SrvCustomers")
                        .HasForeignKey("ReligionId")
                        .HasConstraintName("FK_SrvCustomer_SysReligion");

                    b.Navigation("City");

                    b.Navigation("Gender");

                    b.Navigation("Language");

                    b.Navigation("Nationality");

                    b.Navigation("Religion");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvDocument", b =>
                {
                    b.HasOne("CoreBusiness.Master.SrvFileType", "FileTypeNavigation")
                        .WithMany("SrvDocuments")
                        .HasForeignKey("FileType")
                        .IsRequired()
                        .HasConstraintName("FK_SrvDocument_SrvFileType");

                    b.Navigation("FileTypeNavigation");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvImage", b =>
                {
                    b.HasOne("CoreBusiness.Master.SrvFileType", "FileTypeNavigation")
                        .WithMany("SrvImages")
                        .HasForeignKey("FileType")
                        .IsRequired()
                        .HasConstraintName("FK_SrvImage_SrvFileType");

                    b.Navigation("FileTypeNavigation");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvService", b =>
                {
                    b.HasOne("CoreBusiness.Master.SrvCategory", "Category")
                        .WithMany("SrvServices")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_SrvService_SrvCategory");

                    b.HasOne("CoreBusiness.Master.SrvServiceType", "ServiceType")
                        .WithMany("SrvServices")
                        .HasForeignKey("ServiceTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_SrvService_SrvServiceType");

                    b.Navigation("Category");

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvServiceAddOn", b =>
                {
                    b.HasOne("CoreBusiness.Master.SrvAddOn", "AddOn")
                        .WithMany("SrvServiceAddOns")
                        .HasForeignKey("AddOnId")
                        .IsRequired()
                        .HasConstraintName("FK_SrvServiceAddOn_SrvAddOn");

                    b.HasOne("CoreBusiness.Master.SrvImage", "Image")
                        .WithMany("SrvServiceAddOns")
                        .HasForeignKey("ImageId")
                        .HasConstraintName("FK_SrvServiceAddOn_SrvImage");

                    b.HasOne("CoreBusiness.Master.SrvService", "Service")
                        .WithMany("SrvServiceAddOns")
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("FK_SrvServiceAddOn_SrvService");

                    b.Navigation("AddOn");

                    b.Navigation("Image");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvServiceClass", b =>
                {
                    b.HasOne("CoreBusiness.Master.SrvClass", "Class")
                        .WithMany("SrvServiceClasses")
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("FK_SrvServiceClass_SrvClass");

                    b.HasOne("CoreBusiness.Master.SrvService", "Service")
                        .WithMany("SrvServiceClasses")
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("FK_SrvServiceClass_SrvService");

                    b.Navigation("Class");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvServiceClassValue", b =>
                {
                    b.HasOne("CoreBusiness.Master.SrvClass", "Class")
                        .WithMany("SrvServiceClassValues")
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("FK_SrvServiceClassValue_SrvClass");

                    b.HasOne("CoreBusiness.Master.SrvClassValue", "ClassValue")
                        .WithMany("SrvServiceClassValues")
                        .HasForeignKey("ClassValueId")
                        .IsRequired()
                        .HasConstraintName("FK_SrvServiceClassValue_SrvClassValue");

                    b.HasOne("CoreBusiness.Master.SrvService", "Service")
                        .WithMany("SrvServiceClassValues")
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("FK_SrvServiceClassValue_SrvService");

                    b.Navigation("Class");

                    b.Navigation("ClassValue");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvServiceType", b =>
                {
                    b.HasOne("CoreBusiness.Master.SrvServiceType", "ServiceType")
                        .WithMany("InverseServiceType")
                        .HasForeignKey("ServiceTypeId")
                        .HasConstraintName("FK_SrvServiceType_SrvServiceType");

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvSupplier", b =>
                {
                    b.HasOne("CoreBusiness.Master.SysCity", "City")
                        .WithMany("SrvSuppliers")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_SrvSupplier_SysCity");

                    b.HasOne("CoreBusiness.Master.SysGender", "Gender")
                        .WithMany("SrvSuppliers")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_SrvSupplier_SysGender");

                    b.HasOne("CoreBusiness.Master.SysLanguage", "Language")
                        .WithMany("SrvSuppliers")
                        .HasForeignKey("LanguageId")
                        .HasConstraintName("FK_SrvSupplier_SysLanguage");

                    b.HasOne("CoreBusiness.Master.SysNationality", "Nationality")
                        .WithMany("SrvSuppliers")
                        .HasForeignKey("NationalityId")
                        .HasConstraintName("FK_SrvSupplier_SysNationality");

                    b.HasOne("CoreBusiness.Master.SysReligion", "Religion")
                        .WithMany("SrvSuppliers")
                        .HasForeignKey("ReligionId")
                        .HasConstraintName("FK_SrvSupplier_SysReligion");

                    b.Navigation("City");

                    b.Navigation("Gender");

                    b.Navigation("Language");

                    b.Navigation("Nationality");

                    b.Navigation("Religion");
                });

            modelBuilder.Entity("CoreBusiness.Master.SysCity", b =>
                {
                    b.HasOne("CoreBusiness.Master.SysCountry", "Country")
                        .WithMany("SysCities")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_SysCity_SysCountry");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvAddOn", b =>
                {
                    b.Navigation("SrvServiceAddOns");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvCategory", b =>
                {
                    b.Navigation("InverseParentCategory");

                    b.Navigation("SrvServices");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvClass", b =>
                {
                    b.Navigation("SrvClassValues");

                    b.Navigation("SrvServiceClassValues");

                    b.Navigation("SrvServiceClasses");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvClassValue", b =>
                {
                    b.Navigation("SrvServiceClassValues");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvFileType", b =>
                {
                    b.Navigation("SrvDocuments");

                    b.Navigation("SrvImages");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvImage", b =>
                {
                    b.Navigation("SrvAddOns");

                    b.Navigation("SrvServiceAddOns");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvService", b =>
                {
                    b.Navigation("SrvServiceAddOns");

                    b.Navigation("SrvServiceClassValues");

                    b.Navigation("SrvServiceClasses");
                });

            modelBuilder.Entity("CoreBusiness.Master.SrvServiceType", b =>
                {
                    b.Navigation("InverseServiceType");

                    b.Navigation("SrvServices");
                });

            modelBuilder.Entity("CoreBusiness.Master.SysCity", b =>
                {
                    b.Navigation("SrvCustomers");

                    b.Navigation("SrvSuppliers");
                });

            modelBuilder.Entity("CoreBusiness.Master.SysCountry", b =>
                {
                    b.Navigation("SysCities");
                });

            modelBuilder.Entity("CoreBusiness.Master.SysGender", b =>
                {
                    b.Navigation("SrvCustomers");

                    b.Navigation("SrvSuppliers");
                });

            modelBuilder.Entity("CoreBusiness.Master.SysLanguage", b =>
                {
                    b.Navigation("SrvCustomers");

                    b.Navigation("SrvSuppliers");
                });

            modelBuilder.Entity("CoreBusiness.Master.SysNationality", b =>
                {
                    b.Navigation("SrvCustomers");

                    b.Navigation("SrvSuppliers");
                });

            modelBuilder.Entity("CoreBusiness.Master.SysReligion", b =>
                {
                    b.Navigation("SrvCustomers");

                    b.Navigation("SrvSuppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
